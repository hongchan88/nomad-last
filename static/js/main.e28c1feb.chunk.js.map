{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","getTopRated","getUpcoming","getLatest","getTvOnAir","getTvTopRated","getTvGetPopular","getSearchMovies","query","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","Row","Box","Info","black","Overlay","BigMovie","BigCover","BigTitle","h3","BigOverview","rowVariants","hidden","window","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duaration","infoVariants","opacity","Home","bigMovieMatch","useQuery","isLoading","dataTopRated","dataUpcoming","dataGetlatest","index","setIndex","leaving","setLeaving","toggleLeaving","onBoxClicked","movieId","console","log","clickedMovie","params","results","find","movie","totalMovies","length","maxIndex","Math","floor","backdrop_path","title","overview","AnimatePresence","onExitComplete","duration","slice","map","style","backgroundImage","TvTitle","location","useLocation","URLSearchParams","search","dataTvSearch","Tv","dataTvOnAir","dataTvTopRated","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.e28c1feb.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 2.5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n  const history = useHistory();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    history.push(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Logo\n          variants={logoVariants}\n          whileHover=\"active\"\n          animate=\"normal\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","const API_KEY = '3b1cab5c5e36e322cd72ee8fb2578573';\nconst BASE_PATH = 'https://api.themoviedb.org/3';\n\ninterface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\n\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport function getMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTopRated() {\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getUpcoming() {\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getLatest() {\n  return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvOnAir() {\n  return fetch(`${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvTopRated() {\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvGetPopular() {\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\n    response.json()\n  );\n}\nexport function getSearchMovies(query: string | null) {\n  return fetch(\n    `${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${query}&page=1`\n  ).then((response) => response.json());\n}\nexport function getSearchTv(query: string | null) {\n  return fetch(\n    `${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${query}&page=1`\n  ).then((response) => response.json());\n}\n","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence, useViewportScroll } from 'framer-motion';\nimport {\n  getLatest,\n  getMovies,\n  getTopRated,\n  getUpcoming,\n  IGetMoviesResult,\n} from '../api';\nimport { makeImagePath } from '../utils';\nimport { useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  /* position: relative; */\n  /* top: -100px; */\n  height: 250px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: 'tween',\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: 'tween',\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Home() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>('/movies/:movieId');\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\n    ['movies', 'nowPlaying'],\n    getMovies\n  );\n  const { data: dataTopRated, isLoading: loadingTopRated } =\n    useQuery<IGetMoviesResult>(['movies', 'topRated'], getTopRated);\n  const { data: dataUpcoming, isLoading: loadingUpcoming } =\n    useQuery<IGetMoviesResult>(['movies', 'upcoming'], getUpcoming);\n  const { data: dataGetlatest, isLoading: loadingGetlatest } = useQuery<any>(\n    ['movies', 'latest'],\n    getLatest\n  );\n\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n\n  console.log(dataGetlatest, 'get latest');\n  const onOverlayClick = () => history.push('/');\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId);\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={incraseIndex}\n            bgPhoto={makeImagePath(data?.results[0].backdrop_path || '')}\n          >\n            <Title>{data?.results[0].title}</Title>\n            <Overview>{data?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial='hidden'\n                animate='visible'\n                exit='exit'\n                transition={{ type: 'tween', duration: 1 }}\n                key={index}\n              >\n                {data?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + ''}\n                      key={movie.id}\n                      whileHover='hover'\n                      initial='normal'\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: 'tween' }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Title>Top Rated</Title>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial='hidden'\n                animate='visible'\n                exit='exit'\n                transition={{ type: 'tween', duration: 1 }}\n                key={index}\n              >\n                {dataTopRated?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + ''}\n                      key={movie.id}\n                      whileHover='hover'\n                      initial='normal'\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: 'tween' }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <Title>Upcoming</Title>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial='hidden'\n                animate='visible'\n                exit='exit'\n                transition={{ type: 'tween', duration: 1 }}\n                key={index}\n              >\n                {dataUpcoming?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + ''}\n                      key={movie.id}\n                      whileHover='hover'\n                      initial='normal'\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: 'tween' }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            'w500'\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Home;\n","import { AnimatePresence, motion } from 'framer-motion';\nimport { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useLocation } from 'react-router';\nimport styled from 'styled-components';\nimport { getSearchMovies, getSearchTv } from '../api';\nimport { makeImagePath } from '../utils';\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px;\n  margin-top: 100px;\n`;\nconst TvTitle = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px;\n  margin-top: 300px;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  /* top: 200px;\n  height: 250px; */\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: 'tween',\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: 'tween',\n    },\n  },\n};\nconst MovieContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst offset = 6;\nfunction Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get('keyword');\n  const data = getSearchMovies(keyword);\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const { data: dataTopRated, isLoading: loadingTopRated } = useQuery<any>(\n    ['movies', 'search'],\n    () => getSearchMovies(keyword)\n  );\n  const { data: dataTvSearch, isLoading } = useQuery<any>(\n    ['movies', 'tvSearch'],\n    () => getSearchTv(keyword)\n  );\n  return (\n    <>\n      <Title>Movie Search</Title>\n      <Slider>\n        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n          <Row\n            variants={rowVariants}\n            initial='hidden'\n            animate='visible'\n            exit='exit'\n            transition={{ type: 'tween', duration: 1 }}\n            key={index}\n          >\n            {dataTopRated?.results\n              .slice(1)\n              .slice(offset * index, offset * index + offset)\n              .map((movie: any) => (\n                <Box\n                  layoutId={movie.id + ''}\n                  key={movie.id}\n                  whileHover='hover'\n                  initial='normal'\n                  variants={boxVariants}\n                  // onClick={() => onBoxClicked(movie.id)}\n                  transition={{ type: 'tween' }}\n                  bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                >\n                  <Info variants={infoVariants}>\n                    <h4>{movie.title}</h4>\n                  </Info>\n                </Box>\n              ))}\n          </Row>\n        </AnimatePresence>\n      </Slider>\n      <TvTitle>Tv Search</TvTitle>\n      <Slider>\n        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n          <Row\n            variants={rowVariants}\n            initial='hidden'\n            animate='visible'\n            exit='exit'\n            transition={{ type: 'tween', duration: 1 }}\n            key={index}\n          >\n            {dataTvSearch?.results\n              .slice(1)\n              .slice(offset * index, offset * index + offset)\n              .map((movie: any) => (\n                <Box\n                  layoutId={movie.id + ''}\n                  key={movie.id}\n                  whileHover='hover'\n                  initial='normal'\n                  variants={boxVariants}\n                  // onClick={() => onBoxClicked(movie.id)}\n                  transition={{ type: 'tween' }}\n                  bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                >\n                  <Info variants={infoVariants}>\n                    <h4>{movie.title}</h4>\n                  </Info>\n                </Box>\n              ))}\n          </Row>\n        </AnimatePresence>\n      </Slider>\n    </>\n  );\n}\nexport default Search;\n","import { useQuery } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence, useViewportScroll } from 'framer-motion';\nimport {\n  getLatest,\n  getMovies,\n  getTopRated,\n  getTvGetPopular,\n  getTvOnAir,\n  getTvTopRated,\n  getUpcoming,\n  IGetMoviesResult,\n} from '../api';\nimport { makeImagePath } from '../utils';\nimport { useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  /* position: relative; */\n  /* top: -100px; */\n  height: 250px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: 'tween',\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: 'tween',\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Tv() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>('/movies/:movieId');\n  const { scrollY } = useViewportScroll();\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\n    ['movies', 'nowPlaying'],\n    getMovies\n  );\n  const { data: dataTvOnAir, isLoading: loadingTopRated } =\n    useQuery<IGetMoviesResult>(['tv', 'onair'], getTvOnAir);\n  const { data: dataTvPopular } = useQuery<IGetMoviesResult>(\n    ['movies', 'tvpopular'],\n    getTvGetPopular\n  );\n  const { data: dataTvTopRated } = useQuery<IGetMoviesResult>(\n    ['movies', 'tvtoprated'],\n    getTvTopRated\n  );\n\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => history.push('/');\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId);\n  return (\n    <Wrapper>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={incraseIndex}\n            bgPhoto={makeImagePath(dataTvOnAir?.results[0].backdrop_path || '')}\n          >\n            <Title>{dataTvOnAir?.results[0].title}</Title>\n            <Overview>{dataTvOnAir?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial='hidden'\n                animate='visible'\n                exit='exit'\n                transition={{ type: 'tween', duration: 1 }}\n                key={index}\n              >\n                {dataTvOnAir?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + ''}\n                      key={movie.id}\n                      whileHover='hover'\n                      initial='normal'\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: 'tween' }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Title>Top Rated</Title>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial='hidden'\n                animate='visible'\n                exit='exit'\n                transition={{ type: 'tween', duration: 1 }}\n                key={index}\n              >\n                {dataTvTopRated?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + ''}\n                      key={movie.id}\n                      whileHover='hover'\n                      initial='normal'\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: 'tween' }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Title>Latest</Title>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial='hidden'\n                animate='visible'\n                exit='exit'\n                transition={{ type: 'tween', duration: 1 }}\n                key={index}\n              >\n                {dataTvOnAir?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + ''}\n                      key={movie.id}\n                      whileHover='hover'\n                      initial='normal'\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: 'tween' }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, 'w500')}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            'w500'\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Tv;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/tv\">\n          <Tv />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}